Garland Qiu

We use semaphores to fix synchronization errors and limits the number of processes that enter the critical section to one only. The three that want to enter the critical section are DAD, SON_1, SON_2, and we only want one of the three at a time to change the balance in the account. In the code, when sid is 1, any of the 3 processes can go into the critical section and change the balance, and when sid is -1, the other 2 processes that are not in the critical section have to wait until sid is 1 upon the one process exiting the critical section. To measure the time, the wait times are initialized for the processes. We keep track of these wait times by incrementing the counter values of those outside of the critical section. We can then observe that while the program runs, the dad waits longer than the sons because the two sons are withdrawing more times than the dad is depositing.
